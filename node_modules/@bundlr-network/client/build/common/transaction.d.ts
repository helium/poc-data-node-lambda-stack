/// <reference types="node" />
import { DataItem } from "arbundles";
import type Bundlr from "./bundlr";
import type { BundlrTransactionCreateOptions, UploadOptions, UploadReceipt, UploadResponse } from "./types";
/**
 * Extended DataItem that allows for seamless bundlr operations, such as signing and uploading.
 * Takes the same parameters as a regular DataItem.
 */
export default class BundlrTransaction extends DataItem {
    private bundlr;
    private signer;
    constructor(data: string | Uint8Array, bundlr: Bundlr, opts?: BundlrTransactionCreateOptions);
    sign(): Promise<Buffer>;
    get size(): number;
    uploadWithReceipt(opts?: UploadOptions): Promise<UploadReceipt>;
    upload(opts: UploadOptions & {
        getReceiptSignature: true;
    }): Promise<UploadReceipt>;
    upload(opts?: UploadOptions): Promise<UploadResponse>;
    static fromRaw(rawTransaction: Buffer, bundlrInstance: Bundlr): BundlrTransaction;
}
